{"ast":null,"code":"var _jsxFileName = \"/Users/seth/Desktop/thinkful-work/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Session.js\";\n// //This determines if the session is active or not\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration/index\";\n\nfunction Session({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning\n}) {\n  if (session === null) {\n    return null;\n  }\n\n  const currentTimer = session.label === \"Focusing\" ? focusDuration : breakDuration;\n  const percent = (currentTimer * 60 - session.timeRemaining) / (currentTimer * 60) * 100;\n\n  function nullSession() {\n    if (session.label === \"Focusing\") {\n      return `Focusing for ${minutesToDuration(focusDuration)} minutes`;\n    } else {\n      return `On Break for ${minutesToDuration(breakDuration)} minutes`;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, nullSession()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, secondsToDuration(session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: `${isTimerRunning ? \"none\" : \"block\"}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    style: {\n      width: `${percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Session;","map":{"version":3,"sources":["/Users/seth/Desktop/thinkful-work/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Session.js"],"names":["React","secondsToDuration","minutesToDuration","Session","session","focusDuration","breakDuration","isTimerRunning","currentTimer","label","percent","timeRemaining","nullSession","display","height","width"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,yBAArD;;AACA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,aAA1B;AAAyCC,EAAAA;AAAzC,CAAjB,EAA4E;AAC1E,MAAIH,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AACD,QAAMI,YAAY,GAChBJ,OAAO,CAACK,KAAR,KAAkB,UAAlB,GAA+BJ,aAA/B,GAA+CC,aADjD;AAEA,QAAMI,OAAO,GACV,CAACF,YAAY,GAAG,EAAf,GAAoBJ,OAAO,CAACO,aAA7B,KAA+CH,YAAY,GAAG,EAA9D,CAAD,GAAsE,GADxE;;AAGA,WAASI,WAAT,GAAuB;AACrB,QAAIR,OAAO,CAACK,KAAR,KAAkB,UAAtB,EAAkC;AAChC,aAAQ,gBAAeP,iBAAiB,CAACG,aAAD,CAAgB,UAAxD;AACD,KAFD,MAEO;AACL,aAAQ,gBAAeH,iBAAiB,CAACI,aAAD,CAAgB,UAAxD;AACD;AACF;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,WAAW,EADd,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,iBAAiB,CAACG,OAAO,CAACO,aAAT,CADpB,eAJF,eAOE;AAAI,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAG,GAAEN,cAAc,GAAG,MAAH,GAAY,OAAQ;AAAhD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeJ,OALjB;AAME,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAG,GAAEL,OAAQ;AAApB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAdF,CADF;AA+BD;;AAED,eAAeP,OAAf","sourcesContent":["// //This determines if the session is active or not\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration/index\";\nfunction Session({ session, focusDuration, breakDuration, isTimerRunning }) {\n  if (session === null) {\n    return null;\n  }\n  const currentTimer =\n    session.label === \"Focusing\" ? focusDuration : breakDuration;\n  const percent =\n    ((currentTimer * 60 - session.timeRemaining) / (currentTimer * 60)) * 100;\n\n  function nullSession() {\n    if (session.label === \"Focusing\") {\n      return `Focusing for ${minutesToDuration(focusDuration)} minutes`;\n    } else {\n      return `On Break for ${minutesToDuration(breakDuration)} minutes`;\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {nullSession()}\n          </h2>\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(session.timeRemaining)} remaining\n          </p>\n          <h2 style={{ display: `${isTimerRunning ? \"none\" : \"block\"}` }}>\n            \n          </h2>\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={percent}\n              style={{ width: `${percent}%` }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Session;\n"]},"metadata":{},"sourceType":"module"}