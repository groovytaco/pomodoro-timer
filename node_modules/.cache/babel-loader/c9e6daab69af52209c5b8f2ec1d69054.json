{"ast":null,"code":"import _slicedToArray from\"/Users/seth/Desktop/thinkful-work/Project_Pomodoro_Timer_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/seth/Desktop/thinkful-work/Project_Pomodoro_Timer_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from\"react\";import classNames from\"../utils/class-names\";import useInterval from\"../utils/useInterval\";import Focus from\"./Focus\";import Break from\"./Break\";import Session from\"./Session\";/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */function nextTick(prevState){var timeRemaining=Math.max(0,prevState.timeRemaining-1);return _objectSpread(_objectSpread({},prevState),{},{timeRemaining:timeRemaining});}/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */function nextSession(focusDuration,breakDuration){/**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */return function(currentSession){if(currentSession.label===\"Focusing\"){return{label:\"On Break\",timeRemaining:breakDuration*60};}return{label:\"Focusing\",timeRemaining:focusDuration*60};};}function Pomodoro(){// Timer starts out paused\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimerRunning=_useState2[0],setIsTimerRunning=_useState2[1];// The current session - null where there is no session running\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),session=_useState4[0],setSession=_useState4[1];// Turn off and on the stop button\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),stopButton=_useState6[0],setStopButton=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),disableButton=_useState8[0],setDisableButton=_useState8[1];// ToDo: Allow the user to adjust the focus and break duration.\nvar _useState9=useState(25),_useState10=_slicedToArray(_useState9,2),focusDuration=_useState10[0],setFocusDuration=_useState10[1];var _useState11=useState(5),_useState12=_slicedToArray(_useState11,2),breakDuration=_useState12[0],setBreakDuration=_useState12[1];/**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */useInterval(function(){if(session.timeRemaining===0){new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();return setSession(nextSession(focusDuration,breakDuration));}return setSession(nextTick);},isTimerRunning?1000:null);/**\n   * Called whenever the play/pause button is clicked.\n   */function playPause(){setIsTimerRunning(function(prevState){//PPPPPPPPPPPPPPPPPPP\nsetStopButton(false);setDisableButton(true);var nextState=!prevState;if(nextState){setSession(function(prevStateSession){// If the timer is starting and the previous session is null,\n// start a focusing session.\nif(prevStateSession===null){return{label:\"Focusing\",timeRemaining:focusDuration*60};}return prevStateSession;});}return nextState;});}function handleStop(){setIsTimerRunning(false);setStopButton(true);setSession(null);setDisableButton(false);}return/*#__PURE__*/React.createElement(\"div\",{className:\"pomodoro\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Focus,{focusDuration:focusDuration,setFocusDuration:setFocusDuration,disableButton:disableButton})),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(Break,{breakDuration:breakDuration,setBreakDuration:setBreakDuration,disableButton:disableButton})))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group btn-group-lg mb-2\",role:\"group\",\"aria-label\":\"Timer controls\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",\"data-testid\":\"play-pause\",title:\"Start or pause timer\",onClick:playPause},/*#__PURE__*/React.createElement(\"span\",{className:classNames({oi:true,\"oi-media-play\":!isTimerRunning,\"oi-media-pause\":isTimerRunning})})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",\"data-testid\":\"stop\",title:\"Stop the session\",disabled:stopButton,onClick:handleStop},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-media-stop\"}))))),/*#__PURE__*/React.createElement(Session,{session:session,focusDuration:focusDuration,breakDuration:breakDuration,isTimerRunning:isTimerRunning}));}export default Pomodoro;","map":{"version":3,"sources":["/Users/seth/Desktop/thinkful-work/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Focus","Break","Session","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","stopButton","setStopButton","disableButton","setDisableButton","setFocusDuration","setBreakDuration","Audio","play","playPause","nextState","prevStateSession","handleStop","oi"],"mappings":"qXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,CAAAA,QAAT,CAAkBC,SAAlB,CAA6B,CAC3B,GAAMC,CAAAA,aAAa,CAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYH,SAAS,CAACC,aAAV,CAA0B,CAAtC,CAAtB,CACA,sCACKD,SADL,MAEEC,aAAa,CAAbA,aAFF,GAID,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASG,CAAAA,WAAT,CAAqBC,aAArB,CAAoCC,aAApC,CAAmD,CACjD;AACF;AACA,KACE,MAAO,UAACC,cAAD,CAAoB,CACzB,GAAIA,cAAc,CAACC,KAAf,GAAyB,UAA7B,CAAyC,CACvC,MAAO,CACLA,KAAK,CAAE,UADF,CAELP,aAAa,CAAEK,aAAa,CAAG,EAF1B,CAAP,CAID,CACD,MAAO,CACLE,KAAK,CAAE,UADF,CAELP,aAAa,CAAEI,aAAa,CAAG,EAF1B,CAAP,CAID,CAXD,CAYD,CAED,QAASI,CAAAA,QAAT,EAAoB,CAClB;AACA,cAA4ChB,QAAQ,CAAC,KAAD,CAApD,wCAAOiB,cAAP,eAAuBC,iBAAvB,eACA;AACA,eAA8BlB,QAAQ,CAAC,IAAD,CAAtC,yCAAOmB,OAAP,eAAgBC,UAAhB,eACA;AACA,eAAoCpB,QAAQ,CAAC,IAAD,CAA5C,yCAAOqB,UAAP,eAAmBC,aAAnB,eACA,eAA0CtB,QAAQ,CAAC,KAAD,CAAlD,yCAAOuB,aAAP,eAAsBC,gBAAtB,eACA;AACA,eAA0CxB,QAAQ,CAAC,EAAD,CAAlD,0CAAOY,aAAP,gBAAsBa,gBAAtB,gBACA,gBAA0CzB,QAAQ,CAAC,CAAD,CAAlD,2CAAOa,aAAP,gBAAsBa,gBAAtB,gBAGA;AACF;AACA;AACA;AACA,KACExB,WAAW,CAAC,UAAM,CACd,GAAIiB,OAAO,CAACX,aAAR,GAA0B,CAA9B,CAAiC,CAC/B,GAAImB,CAAAA,KAAJ,CAAU,8CAAV,EAA0DC,IAA1D,GACA,MAAOR,CAAAA,UAAU,CAACT,WAAW,CAACC,aAAD,CAAgBC,aAAhB,CAAZ,CAAjB,CACD,CACD,MAAOO,CAAAA,UAAU,CAACd,QAAD,CAAjB,CACD,CANQ,CAOTW,cAAc,CAAG,IAAH,CAAU,IAPf,CAAX,CAUA;AACF;AACA,KACE,QAASY,CAAAA,SAAT,EAAqB,CACnBX,iBAAiB,CAAC,SAACX,SAAD,CAAe,CAC/B;AACAe,aAAa,CAAC,KAAD,CAAb,CACAE,gBAAgB,CAAC,IAAD,CAAhB,CAGA,GAAMM,CAAAA,SAAS,CAAG,CAACvB,SAAnB,CACA,GAAIuB,SAAJ,CAAe,CACbV,UAAU,CAAC,SAACW,gBAAD,CAAsB,CAC/B;AACA;AACA,GAAIA,gBAAgB,GAAK,IAAzB,CAA+B,CAC7B,MAAO,CACLhB,KAAK,CAAE,UADF,CAELP,aAAa,CAAEI,aAAa,CAAG,EAF1B,CAAP,CAID,CACD,MAAOmB,CAAAA,gBAAP,CACD,CAVS,CAAV,CAWD,CACD,MAAOD,CAAAA,SAAP,CACD,CArBgB,CAAjB,CAsBD,CAED,QAASE,CAAAA,UAAT,EAAqB,CACnBd,iBAAiB,CAAC,KAAD,CAAjB,CACAI,aAAa,CAAC,IAAD,CAAb,CACAF,UAAU,CAAC,IAAD,CAAV,CACAI,gBAAgB,CAAC,KAAD,CAAhB,CACD,CAED,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eAEE,oBAAC,KAAD,EACC,aAAa,CAAGZ,aADjB,CAEC,gBAAgB,CAAEa,gBAFnB,CAGC,aAAa,CAAEF,aAHhB,EAFF,CADF,cASE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,aAAf,eAEE,oBAAC,KAAD,EACA,aAAa,CAAGV,aADhB,CAEA,gBAAgB,CAAEa,gBAFlB,CAGA,aAAa,CAAEH,aAHf,EAFF,CADF,CATF,CADF,cAqBE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BACE,SAAS,CAAC,6BADZ,CAEE,IAAI,CAAC,OAFP,CAGE,aAAW,gBAHb,eAKE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,iBAFZ,CAGE,cAAY,YAHd,CAIE,KAAK,CAAC,sBAJR,CAKE,OAAO,CAAEM,SALX,eAOE,4BACE,SAAS,CAAE5B,UAAU,CAAC,CACpBgC,EAAE,CAAE,IADgB,CAEpB,gBAAiB,CAAChB,cAFE,CAGpB,iBAAkBA,cAHE,CAAD,CADvB,EAPF,CALF,cAsBE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,cAAY,MAHd,CAIE,KAAK,CAAC,kBAJR,CAKE,QAAQ,CAAEI,UALZ,CAME,OAAO,CAAEW,UANX,eAQE,4BAAM,SAAS,CAAC,kBAAhB,EARF,CAtBF,CADF,CADF,CArBF,cA2DG,oBAAC,OAAD,EACA,OAAO,CAAEb,OADT,CAEA,aAAa,CAAEP,aAFf,CAGA,aAAa,CAAEC,aAHf,CAIA,cAAc,CAAEI,cAJhB,EA3DH,CADF,CAoED,CAED,cAAeD,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\"\nimport Session from \"./Session\"\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n  // Turn off and on the stop button\n  const [stopButton, setStopButton] = useState(true)\n  const [disableButton, setDisableButton] = useState(false)\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      //PPPPPPPPPPPPPPPPPPP\n      setStopButton(false);\n      setDisableButton(true);\n\n\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  function handleStop(){\n    setIsTimerRunning(false);\n    setStopButton(true);\n    setSession(null);\n    setDisableButton(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          {/*PPPPPPPPPPPPPPP*/}\n          <Focus\n           focusDuration ={focusDuration}\n           setFocusDuration={setFocusDuration}\n           disableButton={disableButton} \n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            {/*PPPPPPPPPPPPPPP*/}\n            <Break\n            breakDuration ={breakDuration}\n            setBreakDuration={setBreakDuration}\n            disableButton={disableButton}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              disabled={stopButton}\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      {/*PPPPPPPPPPPPPPPPPPP*/}\n       <Session\n       session={session}\n       focusDuration={focusDuration}\n       breakDuration={breakDuration}\n       isTimerRunning={isTimerRunning}\n       />\n    </div>\n  );\n}\n\nexport default Pomodoro;"]},"metadata":{},"sourceType":"module"}